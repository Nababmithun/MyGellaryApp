// Generated by view binder compiler. Do not edit!
package com.example.myphotoloaderapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.myphotoloaderapp.R;
import com.google.android.material.button.MaterialButton;
import com.skydoves.progressview.ProgressView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottomSheetLoadingBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final MaterialButton btnCancelBottomSheet;

  @NonNull
  public final ProgressView pbLoadingBottomSheet;

  @NonNull
  public final TextView tvLoadingBottomSheet;

  private BottomSheetLoadingBinding(@NonNull RelativeLayout rootView,
      @NonNull MaterialButton btnCancelBottomSheet, @NonNull ProgressView pbLoadingBottomSheet,
      @NonNull TextView tvLoadingBottomSheet) {
    this.rootView = rootView;
    this.btnCancelBottomSheet = btnCancelBottomSheet;
    this.pbLoadingBottomSheet = pbLoadingBottomSheet;
    this.tvLoadingBottomSheet = tvLoadingBottomSheet;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BottomSheetLoadingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottomSheetLoadingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bottom_sheet_loading, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottomSheetLoadingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_cancel_bottom_sheet;
      MaterialButton btnCancelBottomSheet = rootView.findViewById(id);
      if (btnCancelBottomSheet == null) {
        break missingId;
      }

      id = R.id.pb_loading_bottom_sheet;
      ProgressView pbLoadingBottomSheet = rootView.findViewById(id);
      if (pbLoadingBottomSheet == null) {
        break missingId;
      }

      id = R.id.tv_loading_bottom_sheet;
      TextView tvLoadingBottomSheet = rootView.findViewById(id);
      if (tvLoadingBottomSheet == null) {
        break missingId;
      }

      return new BottomSheetLoadingBinding((RelativeLayout) rootView, btnCancelBottomSheet,
          pbLoadingBottomSheet, tvLoadingBottomSheet);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
